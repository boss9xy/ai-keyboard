// Generated by view binder compiler. Do not edit!
package com.example.aikeyboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aikeyboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CalculatorKeyboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final Button btnInVanBan;

  @NonNull
  public final Button btnQuayLai;

  @NonNull
  public final LinearLayout calculatorKeyboardContainer;

  @NonNull
  public final TextView calculatorResult;

  private CalculatorKeyboardBinding(@NonNull LinearLayout rootView, @NonNull Button btnClear,
      @NonNull Button btnInVanBan, @NonNull Button btnQuayLai,
      @NonNull LinearLayout calculatorKeyboardContainer, @NonNull TextView calculatorResult) {
    this.rootView = rootView;
    this.btnClear = btnClear;
    this.btnInVanBan = btnInVanBan;
    this.btnQuayLai = btnQuayLai;
    this.calculatorKeyboardContainer = calculatorKeyboardContainer;
    this.calculatorResult = calculatorResult;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CalculatorKeyboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CalculatorKeyboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.calculator_keyboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CalculatorKeyboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClear;
      Button btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btnInVanBan;
      Button btnInVanBan = ViewBindings.findChildViewById(rootView, id);
      if (btnInVanBan == null) {
        break missingId;
      }

      id = R.id.btnQuayLai;
      Button btnQuayLai = ViewBindings.findChildViewById(rootView, id);
      if (btnQuayLai == null) {
        break missingId;
      }

      id = R.id.calculatorKeyboardContainer;
      LinearLayout calculatorKeyboardContainer = ViewBindings.findChildViewById(rootView, id);
      if (calculatorKeyboardContainer == null) {
        break missingId;
      }

      id = R.id.calculatorResult;
      TextView calculatorResult = ViewBindings.findChildViewById(rootView, id);
      if (calculatorResult == null) {
        break missingId;
      }

      return new CalculatorKeyboardBinding((LinearLayout) rootView, btnClear, btnInVanBan,
          btnQuayLai, calculatorKeyboardContainer, calculatorResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
